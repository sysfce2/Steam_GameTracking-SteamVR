.tippy-tooltip[data-animation="fade"][data-state="hidden"] {
  opacity: 0;
}
.tippy-iOS {
  cursor: pointer !important;
  -webkit-tap-highlight-color: transparent;
}
.tippy-popper {
  pointer-events: none;
  max-width: calc(100vw - 10px);
  transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
  transition-property: transform;
}
.tippy-tooltip {
  position: relative;
  color: #fff;
  border-radius: 4px;
  font-size: 14px;
  line-height: 1.4;
  background-color: #333;
  transition-property: visibility, opacity, transform;
  outline: 0;
}
.tippy-tooltip[data-placement^="top"] > .tippy-arrow {
  border-width: 8px 8px 0;
  border-top-color: #333;
  margin: 0 3px;
  transform-origin: 50% 0;
  bottom: -7px;
}
.tippy-tooltip[data-placement^="bottom"] > .tippy-arrow {
  border-width: 0 8px 8px;
  border-bottom-color: #333;
  margin: 0 3px;
  transform-origin: 50% 7px;
  top: -7px;
}
.tippy-tooltip[data-placement^="left"] > .tippy-arrow {
  border-width: 8px 0 8px 8px;
  border-left-color: #333;
  margin: 3px 0;
  transform-origin: 0 50%;
  right: -7px;
}
.tippy-tooltip[data-placement^="right"] > .tippy-arrow {
  border-width: 8px 8px 8px 0;
  border-right-color: #333;
  margin: 3px 0;
  transform-origin: 7px 50%;
  left: -7px;
}
.tippy-tooltip[data-interactive][data-state="visible"] {
  pointer-events: auto;
}
.tippy-tooltip[data-inertia][data-state="visible"] {
  transition-timing-function: cubic-bezier(0.54, 1.5, 0.38, 1.11);
}
.tippy-arrow {
  position: absolute;
  border-color: transparent;
  border-style: solid;
}
.tippy-content {
  padding: 5px 9px;
}
html.VROverlay {
  font-size: 24px;
}
.ControllerMain {
  --text-color: #dee2e5;
  --disabledtext: rgb(144, 147, 150);
}
.ControllerMainBorderRadius {
  border-radius: 1.3rem;
}
.InputContainer {
  background-image: linear-gradient(to bottom right, #32373f, #25282e);
}
.ModalHeader {
  width: 100%;
  text-align: center;
  text-transform: uppercase;
  font-size: 2rem;
}
.PageTitle {
  margin: 0 auto;
  font-size: 1.5rem;
  font-weight: bold;
  text-align: center;
  color: var(--titletext);
}
.TabRow {
  display: flex;
  border-bottom: 2px solid var(--tabborderbottom);
  z-index: 0;
  margin: 0 2rem;
  width: auto;
}
.Tab {
  opacity: 1;
  font-size: 1rem;
  text-align: center;
  padding: 0 1rem 2px 1rem;
  margin: 2px 1rem;
  margin-bottom: -2px;
  color: var(--text-color);
  font-weight: bold;
  background-color: var(--tabbackground);
  border-bottom: 2px solid var(--tabborderbottomtab);
  flex-grow: 1;
  z-index: 0;
  transition-property: background;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
  cursor: pointer;
}
.Tab:first {
  margin-left: 0px;
}
.Tab:hover {
  background: var(--tabbackgroundhovered);
}
.Tab.Selected {
  background-color: var(--tabbackgroundselected);
  border-bottom: 2px solid var(--tabborderbottomselected);
  z-index: 2;
}
.ToggleMirror {
  font-size: 1.2rem;
  margin-top: 6px;
  text-align: center;
}
.AllCaps {
  text-transform: uppercase;
}
.PositionRelative {
  position: relative;
}
.FlexRowWithWrap {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.FlexRightAlignChild {
  margin-left: auto;
}
.FlexColumnCentered {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.FlexFullHeightColumnCentered {
  display: flex;
  height: 100%;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.FullPage {
  width: 100%;
  height: 100%;
}
.FullWidth {
  width: 100%;
}
.FlexFullWidthRowCentered {
  display: flex;
  width: 100%;
  justify-content: center;
  flex-direction: row;
}
.FlexFullWidthRowLeftJustified {
  display: flex;
  justify-content: left;
  flex-direction: row;
}
.PageTitleBar {
  display: flex;
  flex-grow: 0;
  flex-shrink: 0;
  flex-direction: column;
  width: 100%;
}
.PageMainContentWrapper {
  padding-top: 1rem;
}
.PageTitleBar .TitleBarMainRow {
  background: var(--pagetitlebackground);
  align-items: center;
  min-height: 4.5rem;
}
.PageTitleBar .PageSubTitle {
  text-align: center;
  font-size: 1rem;
}
.PageTitleBar .PageTitleLabel {
  width: 100%;
}
.PageTitleBar .PageTitleLabel.SingleTitle {
  align-self: center;
}
.PageTitleButton {
  background: var(--backbuttonbackground);
  border: none;
  font-size: 1rem;
  font-weight: bold;
  height: 100%;
  width: fit-content;
  transition-property: background-color;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
}
.PageTitleBar .PageTitleBackButton {
  margin-left: 1rem;
  margin-right: auto;
  align-items: center;
  padding: 0.5rem;
  padding-right: 1rem;
}
.PageTitleBar .TitleBarSection.RightBackButton {
  opacity: 0;
}
.PageTitleBar .OptionsButton {
  font-size: 1rem;
  border: none;
  font-weight: bold;
  background: var(--backbuttonbackground);
  margin-right: 1rem;
  height: 100%;
  width: fit-content;
  flex: 0;
  margin-left: auto;
  align-items: center;
  padding: 0.7rem;
  transition-property: background-color;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
}
.PageTitleBar .PageTitleBackButton:hover {
  background: var(--backbuttonbackgroundhover);
}
.PageTitleBar .PageTitleBackButton .ActionButtonImage {
  height: 1.1rem;
  width: 1rem;
  transition-property: opacity;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
  opacity: 0.8;
  padding: 0.4rem;
}
.PageTitleBar .PageTitleBackButton:hover .ActionButtonImage {
  opacity: 1;
}
.PageTitleBar .NoSteamWarning {
  background: var(--warningbackground);
  color: #fff;
  font-size: 1.5rem;
  text-align: center;
  font-weight: bold;
  width: 100%;
}
.ControllerImage {
  pointer-events: none;
  z-index: -1;
  display: inline-flex;
  position: sticky;
  top: 1rem;
  width: 70%;
  object-fit: contain;
  margin: var(--controller-image-margin) auto;
}
.BindingButtonRow {
  width: 25%;
}
.BindingButtonRowSingleDevice .ControllerImageColumn {
  width: 100%;
}
.MenuSVG,
.BindingPosePointSVG,
.BindingPoseLineSVG {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
.MenuSVG {
  position: fixed;
  opacity: 0;
  top: 8rem;
}
.MenuSVGVisible {
  opacity: 1;
}
.BindingPoseLineSVG,
.BindingPosePointSVG {
  width: 3000px;
  left: 0;
}
.VisualizerControl .MenuSVG {
  top: 0;
  position: absolute;
}
.Label.BindingLabel {
  font-size: 1rem;
  padding: 2px;
  width: 80%;
  word-break: break-word;
  color: var(--bindinglistdetails);
}
.None .Label.BindingLabel {
  opacity: 0.5;
}
.BindingLabel.BindingHeader {
  font-weight: bold;
  text-transform: uppercase;
  background-color: var(--buttonhover);
  box-shadow: var(--bordercolor) 0px 0px 5px 0px;
  border: 1px solid var(--bordercolor);
  color: var(--bindingsourceheader);
}
.BindingLabel.BindingHeader.ReadOnly {
  background-color: transparent;
  box-shadow: none;
  border: 1px solid transparent;
}
.BindingActionWrapper div.BindingLabelAction {
  border: 1px solid transparent;
}
.BindingLabelActionRequirement {
  font-size: 1.2rem;
  font-style: italic;
  opacity: 0.75;
}
.Mirrored {
  opacity: 0.5;
}
.SaveDialogWrapper .Label {
  margin-top: 1rem;
  margin-bottom: 0.4rem;
}
.SaveDialogWrapper .ButtonInput {
  margin-top: 1rem;
}
.SaveTitleBar .Title {
  margin-left: 0.5rem;
}
.SaveDialogWrapper textarea {
  max-width: 100%;
  resize: vertical;
}
.SaveDialogWrapper {
  width: 100%;
}
.SaveBottomButtonRow {
  width: 100%;
  margin-top: 1rem;
}
.SaveBottomButtonRow .ButtonControl {
  margin: 0 1rem;
  flex-grow: 1;
  text-align: center;
}
.ControllerTitle.Label {
  font-size: 1.5rem;
  opacity: 0.8;
  margin-top: 10px;
  width: 100%;
  text-align: center;
  text-overflow: clip;
  overflow: hidden;
}
.BindingSection {
  position: absolute;
  padding: 0 1rem;
  top: 0px;
  left: 0px;
  right: 0;
  justify-content: space-between;
}
.BindingSectionWrapper::-webkit-scrollbar,
.AppSelectWrapper::-webkit-scrollbar,
.AppBindingSection::-webkit-scrollbar {
  width: 1.1rem;
  background-color: var(--scrollbarbackground);
}
.BindingSectionWrapper::-webkit-scrollbar-thumb,
.AppSelectWrapper::-webkit-scrollbar-thumb,
.AppBindingSection::-webkit-scrollbar-thumb {
  background: var(--scrollbarthumb);
  border-radius: 0.8rem;
}
.BottomButtonRow {
  width: 100%;
  position: relative;
}
.BottomButtonRow .ButtonControl {
  font-size: 1.5rem;
}
.BindingManageButtons {
  margin: 0 auto;
}
.TopRow {
  width: 100%;
  z-index: 2;
  min-height: fit-content;
  flex: 0 0;
  position: relative;
}
.DescriptionTopRow {
  align-items: center;
}
.ControllerNameTitle {
  font-size: 2rem;
}
.ControllerTitleHeader {
  margin-left: auto;
  margin-right: auto;
}
.AppRowTitleDropdown {
  white-space: nowrap;
}
.ActionButtonImage {
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
}
.ActionButtonImageLarge {
  width: 2rem;
  height: 2rem;
}
.SourceModeButtonImage {
  transition-property: opacity, filter;
  transition-timing-function: ease-in-out;
  transition-duration: var(--button-fade-time);
  opacity: 0;
}
.SourceModeButtonImage:hover,
.ChordManageButtons:hover .ActionButtonImage,
.BindingListEntryButton:hover .ActionButtonImage {
  filter: invert(14%) sepia(17%) saturate(435%) hue-rotate(181deg)
    brightness(88%) contrast(94%);
}
.SourceModeGroup:hover .SourceModeButtonImage,
.SourceModeGroup.Edit .SourceModeButtonImage,
.SourceModeGroup:hover .SourceModeFooterHR,
.SourceModeGroup.Edit .SourceModeFooterHR {
  opacity: 1;
}
div.SourceModeButtonLabel {
  font-size: 0.6rem;
}
.SourceModeGroup {
  padding: 5px;
  background-color: var(--sourcemodegroupbackground);
  border-radius: 2px;
  border: 1px solid transparent;
  transition-property: background-color, border;
  transition-timing-function: ease-out;
  transition-duration: 0.23s;
}
.SourceModeGroup:hover {
  background-color: var(--sourcemodehover);
}
.SourceModeGroup.Edit {
  background-color: var(--bindingmodeedit);
}
.rodal {
  cursor: default;
  outline: none;
}
body .rodal-dialog {
  background: var(--modalbackground);
}
.InlineDropdownItem {
  cursor: pointer;
  font-size: 2rem;
  border-radius: 2px;
  text-align: center;
  margin-top: 6px;
  padding: 0 4px;
  background: var(--buttondefault);
  width: calc(100% - 10px);
  transition-property: background;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
}
.InlineDropdownItem:hover,
.InlineDropdownItem.Selected {
  background: var(--buttonhover);
}
.InlineSeparator {
  border-top: 0.2rem dashed var(--buttonhover);
  margin-top: 1rem;
  margin-bottom: calc(1rem - 6px);
  width: 100%;
}
.InlineBlankSeparator {
  margin-top: 2rem;
  margin-bottom: calc(1rem - 6px);
  width: 100%;
}
.InlineNonItemSeparator {
  font-size: 1.2rem;
  font-style: italic;
  text-align: center;
  margin-top: 6px;
  padding: 0 4px;
  width: calc(100% - 10px);
  transition-property: background;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
}
.InlineSubHeaderSeparator {
  font-size: 1.3rem;
  margin-bottom: calc(0.5rem - 6px);
  width: 100%;
}
.InlineDropdownItemWrapper {
  overflow-y: auto;
  width: 100%;
}
.InlineDropdownModalWrapper {
  margin-top: 20px;
  margin-bottom: 20px;
  width: 100%;
}
.PinTop .rodal-dialog {
  margin-top: 10%;
}
.InlineDropdownLabel {
  cursor: pointer;
  font-size: 1rem;
  padding: 2px;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  margin-left: 10px;
  color: var(--text-color);
  font-weight: bold;
  background: var(--buttondefault);
  transition-property: background;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
}
.InlineDropdownLabel.ReadOnly {
  margin-top: 0px;
  margin-bottom: 0px;
  padding-top: 2px;
  text-align: center;
  background-color: transparent;
  box-shadow: none;
  border: none;
}
.InlineDropdownLabel:hover {
  background: var(--buttonhover);
}
.SourceModeGroup .InlineDropdownLabel {
  font-weight: normal;
  margin-left: 0;
}
.BindingHeaderWrapper .InlineDropdownLabel {
  text-transform: uppercase;
  font-weight: bold;
}
.SourceModeFooterHR {
  width: 90%;
  border-width: 1px;
  margin: 0.4rem auto;
  opacity: 0;
  transition-property: opacity;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
}
.SourceModeFooterEdit {
  align-self: flex-start;
  margin-left: 5%;
}
.BindingHeaderWrapper,
.BindingActionWrapper {
  align-items: center;
}
.BindingActionWrapper {
  margin: 0 1rem;
}
.BindingInputSection {
  margin-bottom: 1rem;
}
.SourceModeFooterButtons {
  width: 100%;
}
.SelectedAppImage {
  width: 92px;
  margin-left: 6px;
}
.SelectedControllerImage {
  width: 100%;
  height: 100%;
}
.SelectedControllerButton {
  width: 20%;
}
.AppSelectColumnWrapper {
  display: flex;
  flex-direction: row;
  height: 100%;
  max-width: 45rem;
  width: 100%;
  margin: 0 auto;
}
.AppSelectColumn {
  overflow-y: auto;
  flex-grow: 1;
  width: 0;
  padding-bottom: 1rem;
}
.AppSelectColumn:not(:last-child) {
  margin-right: -2rem;
}
.AppSelectList {
  display: flex;
  flex-direction: column;
  max-height: 100%;
  margin-top: 1rem;
}
.AppSelectListItems {
  padding-bottom: 1rem;
}
.ButtonControl.DeveloperLabel {
  font-size: 1rem;
}
.AppSelectColumn .ButtonControl {
  width: fit-content;
}
.AppSelectShowMoreButton {
  margin-left: auto;
  margin-right: auto;
  border-radius: 1rem;
}
.CalibrateThumbstickItem {
  margin-left: 2rem;
}
.AppSelectPageWrapper {
  height: 100%;
  display: flex;
  flex-direction: column;
}
.AppSelectTitle {
  color: var(--descriptiontext);
  font-size: 1.5rem;
  margin-top: 0.5rem;
  margin-left: 2rem;
  margin-bottom: 0.5rem;
}
.AppSelectWrapper {
  max-height: calc(100% - 30rem);
  overflow-y: auto;
  justify-content: center;
}
.RunningApp .AppSelectWrapper {
  max-height: calc(100% - 26rem);
}
.AppSelectContainer {
  margin: 1rem 2rem 0 2rem;
  transition-property: background;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
  background: var(--buttondefault);
  display: flex;
  flex-direction: row;
  cursor: pointer;
  --app-select-container-padding: 1rem;
  --app-image-border-radius: 0.5rem;
  padding: var(--app-select-container-padding);
  border-radius: calc(
    var(--app-select-container-padding) +
    var(--app-image-border-radius)
  );
}
.AppSelectContainer:first-child {
  margin-top: 0;
}
.AppSelectContainer .AppImage {
  --height: 4.5rem;
  height: var(--height);
  width: calc(var(--height) * 460 / 215);
  background-color: #000;
  background-size: contain;
  background-position-x: center;
  background-repeat: no-repeat;
  flex-shrink: 0;
  border-radius: var(--app-image-border-radius);
}
.AppSelectContainer:hover {
  background: var(--buttonhover);
}
.AppSelectName {
  color: var(--text-color);
  text-align: center;
  font-weight: bold;
  font-size: 1.5rem;
  margin: 0.2rem;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow-x: hidden;
  height: fit-content;
  margin: auto 0 auto 1rem;
}
.RunningAppContainer img {
  flex: 0;
  object-fit: contain;
}
.RunningAppContainer .AppSelectContainer {
  max-width: 50%;
  margin: auto;
  margin-bottom: 1rem;
  width: fit-content;
}
.RunningAppContainer .AppSelectName {
  font-size: 2rem;
  align-self: center;
  margin-left: 1rem;
}
.AppSelectCompositorEntry {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: 0;
  margin-right: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.1rem;
  position: absolute;
  right: 0;
  top: 0;
}
.AppSelectCompositorEntry img {
  padding: 0.5rem;
  opacity: 0.5;
  width: 16rem;
}
.BottomButton {
  align-items: center;
  opacity: 0.7;
  margin: 0 1rem;
  min-height: fit-content;
  flex: 0 0;
}
.BottomButtonLabel {
  color: var(--descriptiontext);
  font-size: 1rem;
  text-align: center;
  text-overflow: ellipsis;
}
.BottomButtonHR {
  border-top: 1px solid var(--disabledtext);
  opacity: 0.8;
  margin-bottom: unset;
}
.BottomButtonImage {
  filter: invert(0.5) sepia(1) saturate(5) hue-rotate(175deg);
  margin-bottom: 0.5rem;
  transition-property: opacity;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
}
.BottomButton:hover {
  opacity: 1;
}
.ChordManageButtons {
  font-size: 1rem;
  margin: 0 0.5rem;
  background: var(--buttondefault);
  padding: 0.5rem;
  cursor: pointer;
}
.ChordManageTopButton {
  margin-right: 0.5rem;
}
.ChordManageButtons .ActionButtonImage {
  margin-right: 0.5rem;
}
.ChordBindingContents {
  overflow-y: auto;
  margin: 1rem;
  margin-bottom: 0;
}
.ChordBindingChordsList {
  overflow-x: hidden;
  overflow-y: auto;
  width: 100%;
  margin: 1rem;
  margin-left: 0;
  min-height: 30vh;
  max-height: 70vh;
}
.ChordBindingRow {
  margin: 0.4rem 0;
  padding: 0.5rem;
  justify-content: space-evenly;
  background-color: var(--chordbindingrowbackground);
}
.ChordBindingImage {
  align-self: center;
  margin: 0 0.2rem;
}
.ChordBindingSet {
  background-color: var(--chordbindingsetbackground);
}
.ChordBindingEntry {
  margin: 0.5rem;
}
.ChordBindingAction {
  margin: 0;
  height: 100%;
  align-self: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 1rem;
}
.ChordBindingAction div {
  text-align: center;
}
.ChordBindingInputType {
  display: flex;
  width: 100%;
}
.ChordBindingInputType .InlineDropdownLabel {
  width: 100%;
  margin-left: 0;
  text-align: center;
  padding: 0.1rem 0.5rem;
}
.ChordManageButtons:hover {
  background-color: var(--buttonhover);
}
.ChordBindingAddDeleteRow {
  margin: 0.5rem 0;
}
.ChordBindingCloseButton {
  margin-top: auto;
  height: 4rem;
  width: 100%;
  background: var(--chordbindingrowbackground);
  font-size: 1rem;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  align-self: flex-end;
  transition-property: background;
  transition-timing-function: ease-out;
  transition-duration: var(--button-fade-time);
  cursor: pointer;
}
.ChordBindingCloseButton:hover {
  background: var(--buttonhover);
}
.ChordBindingEntry .ActionButtonImage {
  margin-right: 1.7rem;
  margin-top: 1.7rem;
}
.ChordTypeLabel {
  margin: 0 0.5rem;
}
.ChordButtonRow {
  margin-left: 0.5rem;
  margin-bottom: 0.5rem;
  margin-top: auto;
  justify-content: flex-end;
}
.ActionButtonImage.ChordBindingEntryDelete {
  align-self: center;
  margin: 0;
  margin-left: 0.5rem;
}
.ChordEntryActionColumn {
  margin: auto 1rem;
}
.ChordBindingBigButton {
  background: var(--chordbindingrowbackground);
  align-self: center;
  padding: 0.5rem;
  display: flex;
  align-items: center;
  flex-direction: row;
  margin: auto 0;
  justify-content: center;
  cursor: pointer;
}
.ChordEntryActionColumn .ChordBindingBigButton {
  width: 100%;
  text-align: center;
}
.ChordEntryActionColumn:not(:first-child) .ChordBindingBigButton {
  margin-bottom: 0.2rem;
}
.ChordBindingPlusLabel {
  color: var(--descriptiontext);
  text-align: center;
}
.ChordBindingHeader {
  flex-shrink: 0;
  width: 100%;
  margin: 1rem;
  margin-right: 2rem;
  margin-bottom: 0;
  margin-left: 0;
  padding-bottom: 1rem;
  border-bottom: 2px solid var(--modalheaderbottomborder);
}
.ChordBindingHeader .Title {
  margin: auto 0.1rem;
}
.ChordManageButtons.AddChordButton {
  margin: 0;
  margin-top: auto;
  margin-right: 1rem;
  align-self: flex-end;
}
.UnboundActionsCount {
  position: absolute;
  top: 0.3rem;
  right: 0.3rem;
  padding: 0.2rem 0.5rem 0.2rem 0.5rem;
  background-color: var(--tabbackground);
  border-radius: 0.2rem;
  font-size: 0.9rem;
}
.UnboundActionsOverlay {
  position: absolute;
  top: calc(100% + 2rem);
  width: 40%;
  min-width: 6rem;
  background-color: var(--modalbackground);
  padding: 1rem;
  position: absolute;
  left: 0;
  right: 0;
  margin: auto;
  z-index: 4;
  opacity: 0;
  transition: opacity var(--button-fade-time);
  color: var(--bindinglistdetails);
}
.UnboundActionsOverlay.Visible {
  opacity: 1;
}
.ControllerBindingSettingsModal {
  width: 75%;
}
.PoseInputSettingsLabel {
  font-weight: bold;
  font-size: 1.5rem;
  width: 15rem;
  color: var(--poseactiontitle);
  flex: 2;
}
.InputSettingsLabel {
  font-weight: bold;
  font-size: 1rem;
  width: 15rem;
  color: var(--poseactiontitle);
  flex: 2;
}
.InputSettingsLabel:empty {
  display: none;
}
.InputSettingsRow {
  padding: 0.5rem;
  align-items: center;
  background: var(--poseactionlistentry);
}
.InputSettingsResetButton {
  cursor: pointer;
  font-size: 1rem;
  padding: 2px;
  margin-left: 10px;
  color: var(--text-color);
  font-weight: bold;
  background: var(--buttondefault);
  box-shadow: var(--bordercolor) 0px 0px 5px 0px;
  border: 1px solid var(--bordercolor);
  border-radius: 2px;
  flex: 1;
}
.InputSettingsResetButton:hover {
  color: var(--buttonhover);
}
.InputSettingsInputContainer {
  flex: 3;
  margin: 0 10px;
}
.InputSettingsInputContainer input {
  width: 100%;
}
.InputSettingsVector3Container {
  flex: 3;
  margin: 0 10px;
}
.InputSettingsVector3Row {
  justify-content: flex-end;
}
.InputSettingsVector3 {
  width: auto;
  margin: 0.5rem;
  font-size: 1.5rem;
}
.InputSettingsVector3Label {
  font-weight: bold;
  font-size: 1.25rem;
  color: var(--poseactiontitle);
  align-self: center;
  min-width: 40px;
  text-align: right;
}
.InputSettingsPoseLabel {
  font-weight: bold;
  font-size: 1.5rem;
}
.InputSettingsPoseNumber input[type="number"]::-webkit-outer-spin-button,
.InputSettingsPoseNumber input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.InputSettingsPoseNumber input[type="number"] {
  padding-right: 2rem;
  text-align: right;
  font-size: 1.5rem;
}
.InputSettingsPoseNumber {
  position: relative;
  display: inline-flex;
  align-items: center;
}
.InputSettingsPoseNumberArrows {
  position: absolute;
  right: 0.2rem;
  top: 0.6rem;
  bottom: 0.6rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.InputSettingsPoseNumber button {
  width: 2rem;
  height: 50%;
  padding: 0;
  font-size: 1.1rem;
  line-height: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  transition: color 0.2s ease;
}
.InputSettingsPoseNumberArrows button:hover {
  color: #00adee;
}
.InputSettingsModal {
  width: 100%;
  display: flex;
  flex-direction: column;
  z-index: 3;
}
.InputSettingsScrollablePanel {
  overflow-y: auto;
}
.InputSettingsCloseButton {
  margin-top: 1rem;
  height: 4rem;
  width: 100%;
  background: var(--chordbindingrowbackground);
  font-size: 1rem;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  align-self: flex-end;
  cursor: pointer;
}
.InputSettingsCloseButton:hover {
  background: var(--buttonhover);
}
.RangeLabel {
  text-align: right;
  font-variant-numeric: tabular-nums;
}
.InputSettingsInputContainer.HalfSplit input[type="range"] {
  --left-color: rgb(225, 219, 214);
  --right-color: rgb(238, 170, 125);
  -webkit-appearance: none;
  background: linear-gradient(
    to right,
    var(--left-color) 0%,
    var(--left-color) 48%,
    var(--right-color) 52%,
    var(--right-color) 100%
  );
  height: 4px;
}
.InputSettingsInputContainer.HalfSplit input[type="range"]:focus {
  outline: none;
}
.PoseTitleBar,
.SaveTitleBar {
  width: 100%;
  margin: 1rem;
  margin-bottom: 0;
  align-items: center;
  justify-content: center;
  padding-bottom: 1rem;
  border-bottom: 2px solid var(--modalheaderbottomborder);
}
.SaveTitleBar {
  margin: 0;
}
.PoseMainContent {
  height: 90%;
  width: 100%;
}
.PoseActionsList {
  position: relative;
  align-self: flex-start;
  height: calc(100% - 0.8rem);
  max-width: 30%;
  flex-grow: 0;
  padding: 0.4rem;
  z-index: 1;
  overflow-y: scroll;
  overflow-x: hidden;
  background: var(--poseactionsbackground);
}
.PoseActionsList .Title {
  margin-bottom: 0.5rem;
}
.PoseControllerPictures {
  flex-grow: 1;
  margin: 4rem;
  justify-content: center;
  text-align: center;
  align-items: center;
}
.PoseControllerPictures .ControllerImageContainer {
  width: 100%;
}
.PoseControllerPictures .ControllerImage {
  margin: 0;
  max-height: calc(70vh - 7em);
}
.PoseBindingPoints {
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
}
.PoseActionLabel {
  font-weight: bold;
  font-size: 1rem;
  width: 45%;
  color: var(--poseactiontitle);
  flex: 1 1;
}
.PoseActionListEntry {
  padding: 0.5rem;
  align-items: center;
  background: var(--poseactionlistentry);
}
.PoseActionSettingsButton {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.PoseActionListEntryWrapper svg {
  opacity: 0;
  transition: opacity var(--button-fade-time);
}
.PoseActionListEntryWrapper:hover svg {
  opacity: 1;
}
.PoseActionListEntryWrapper hr {
  margin-top: 6px;
}
.BindingControllerImageColumns {
  position: sticky;
  top: 0;
  max-height: 100%;
  left: 26%;
  width: 48%;
  z-index: 1;
}
.ControllerImageColumn {
  width: 50%;
}
.BindingSectionWrapper {
  position: relative;
  flex: 1 1 100%;
  overflow-y: scroll;
}
.LegacySetupWrapper {
  margin-top: 1rem;
  overflow-y: auto;
}
.LegacySetupContents {
  margin-left: auto;
  margin-right: auto;
  width: 90rem;
  margin-bottom: 2rem;
}
.SimulatedActionType {
  font-size: 1.2rem;
  width: 30%;
}
.LegacySectionHeader {
  margin-top: 1rem;
  font-size: 200%;
  text-align: center;
}
.SetupLegacyRow {
  justify-content: center;
  margin-top: 0.5rem;
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.ActionAliasButtonWrapper {
  margin-left: auto;
  margin-right: auto;
}
.HiddenAliasRow {
  flex-grow: 0;
  flex-shrink: 0;
  margin: auto 1rem;
}
.HiddenActionsWrapper::after {
  content: "";
  flex-grow: 1;
}
.HiddenAliasName {
  margin-top: auto;
  margin-bottom: auto;
  min-width: 22rem;
}
.HiddenActionsWrapper {
  overflow-y: auto;
  height: 100%;
}
.SetupLegacyRow .InlineDropdownLabel {
  font-weight: unset;
  height: fit-content;
  margin-top: auto;
  margin-bottom: auto;
}
.TrackpadSelectionBackground {
  margin-left: 1rem;
  margin-top: 0.3rem;
  margin-bottom: 0.3rem;
  border-radius: 50%;
  border-color: #fff;
  border-width: 0.2rem;
  background-color: gray;
  border-style: solid;
  width: 10rem;
  height: 10rem;
}
.TrackpadSelectionPip {
  margin-left: -0.5rem;
  margin-top: -0.5rem;
  width: 1rem;
  height: 1rem;
  background-color: red;
  border-radius: 50%;
  pointer-events: none;
  position: relative;
}
.BindingManageButtonsHR {
  margin: 0 1rem;
  width: 0px;
  border: 1px solid #d3d3d3;
}
.ControllerImageColumnButtons {
  margin-bottom: 1.4rem;
}
.LoadErrorCloseButton {
  margin-top: auto;
}
.LoadErrorDialogWrapper {
  height: 100%;
}
.TrackerEditorMainContentWrapper {
  padding-top: var(--pagecontenttoppadding);
  flex-grow: 1;
  overflow-y: auto;
  text-align: center;
}
.TrackerEntry {
  background-color: var(--chordbindingsetbackground);
  display: inline-block;
  flex-direction: column;
  margin: 10px;
  text-align: left;
  padding: 10px;
  min-width: 30em;
}
.TrackerEntry .RoleDropdownLabel {
  --height: 1.9em;
  height: var(--height);
  line-height: var(--height);
}
.TrackerEntry .ControllerImage {
  width: 5rem;
  height: 5rem;
  z-index: 1;
}
.TrackerEntry .FlexColumn {
  align-self: center;
}
.TrackerEntry.Connected {
  --gradient-color: #2e6347;
  background: linear-gradient(
    190deg,
    var(--chordbindingsetbackground) 0%,
    var(--chordbindingsetbackground) 70%,
    var(--gradient-color) 100%
  );
}
.TrackerEntry.Connected .TrackerConnected {
  color: #00ea00;
}
.TrackerEntry.Disconnected .TrackerConnected {
  color: #000;
}
.TrackerEntry .BottomRow {
  display: flex;
  flex-direction: column;
  margin-top: 30px;
  position: relative;
}
.TrackerEntry .BottomRow .ButtonControl {
  position: absolute;
  right: 0;
  bottom: 0;
}
.SourceInputShowMore {
  color: var(--descriptiontext);
  margin: 0 1rem;
  transition: color var(--button-fade-time);
}
.SourceInputShowMore.Disabled {
  display: none;
}
.ActionAliasAction {
  font-size: 1.2rem;
  width: 20%;
  margin-top: auto;
  margin-bottom: auto;
  flex-grow: 1;
}
input.ActionAliasUserSuppliedName {
  width: 30%;
  height: 2rem;
  margin-top: auto;
  margin-bottom: auto;
  flex-grow: 4;
  padding-left: 0.6rem;
}
.SetupLegacyRow .ButtonControl {
  margin-left: 2rem;
  margin-top: auto;
  margin-bottom: auto;
  padding: 0.5rem 0.5rem;
}
.SetupLegacyRow .Label {
  margin-top: auto;
  margin-bottom: auto;
}
.SimulatedActionsAddWrapper .InlineDropdownLabel {
  margin-left: auto;
  margin-right: auto;
  width: auto;
  max-width: 14rem;
  text-align: center;
}
.SimActionTargetLabel {
  font-size: 1.2rem;
  margin-top: auto;
  margin-bottom: auto;
}
.AddSimActionButton {
  font-weight: normal;
  font-size: 1.2rem;
}
.InputOptionLabel {
  font-size: 1.2rem;
  margin-left: 0.3rem;
  margin-top: auto;
  margin-bottom: auto;
  width: 15rem;
  color: var(--poseactiontitle);
  flex: 2;
}
.Label.SecondRow {
  margin-top: 1rem;
  margin-bottom: 2rem;
}
.Label.Title {
  font-size: 1.5rem;
  color: var(--descriptiontext);
}
.Label.Description {
  font-size: 0.8rem;
  color: var(--descriptiontext);
}
.BindingSaveErrorHeader {
  color: #fff;
  background-color: var(--warningbackground);
  padding: 0.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.BindingSaveErrorMessage {
  font-size: 1.5rem;
}
.MissingBindingsErrorSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: 1rem;
}
.Label.Tab.Warning {
  padding-right: 1.2rem;
  background-color: var(--warningbackground);
}
.Tab.Warning.Selected {
  padding-right: 1.2rem;
  background-color: var(--tabbackgroundselected);
}
.Label.Tab.Error {
  padding-right: 1.2rem;
  background-color: var(--errorbackground);
}
.Tab.Error.Selected {
  padding-right: 1.2rem;
  background-color: var(--tabbackgroundselected);
}
.TitleCenter {
  justify-content: center;
  align-items: center;
  text-align: center;
}
.Label.TitleCenter {
  font-size: var(--titlefontsize);
}
.ModeSettingsModal .BottomButtons {
  margin-top: auto;
}
.AppSelectExtraButtons {
  bottom: 0px;
  position: absolute;
  display: flex;
  flex-direction: row;
}
.LegacyDebuggerWrapper {
  width: 100%;
}
.CalibrateThumbstickItem .Label {
  margin-top: auto;
  margin-bottom: auto;
  margin-right: 1rem;
  min-width: 40%;
}
.ThumbstickAngleIcon {
  margin-top: auto;
  margin-bottom: auto;
}
.DeadzoneOuter {
  border-radius: 50%;
  border: solid 4px #fff;
  width: 2.3rem;
  height: 2.3rem;
  position: relative;
}
.DeadzoneInner {
  border-radius: 50%;
  background: gray;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}
.ControllerUtilityButton {
  margin-left: 2rem;
}
.ThumbstickAngle {
  margin-left: 0.7rem;
  margin-top: auto;
  margin-bottom: auto;
}
.CalibrateButtonRow {
  width: fit-content;
  margin-left: auto;
  margin-right: 0.2rem;
}
.ModalBackdrop {
  background: #000;
  opacity: 0.2;
}
.Modal {
  border: 1px solid var(--bordercolor);
  background: var(--modalbackground);
  padding: 1em;
}
@keyframes DebuggerDropdownPopoverFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.Dropdown.Popover {
  position: fixed;
  top: 0;
  left: 0;
  width: fit-content;
  height: fit-content;
  z-index: 9001;
  border-radius: var(--settings-control-inner-border-radius);
  overflow-y: auto;
  box-shadow: 0px 1px 18px 4px #00000021;
  background: var(--settings-control-background);
  animation: DebuggerDropdownPopoverFadeIn
    var(--settings-modal-animation-duration)
    var(--control-switch-overshoot-ease);
  animation-fill-mode: both;
}
.Dropdown.Popover > .Separator {
  border-top: solid 1px var(--settings-control-hover-background);
}
.ButtonControl.Dropdown {
  display: flex;
  flex-direction: row;
}
.ButtonControl.Dropdown > span {
  flex-grow: 1;
  overflow: none;
  text-overflow: ellipsis;
  text-align: left;
}
.ButtonControl.Dropdown::after {
  --size: calc(0.2 * var(--settings-control-default-height));
  --thickness: 0.15em;
  content: "";
  width: var(--size);
  height: var(--size);
  flex-shrink: 0;
  align-self: center;
  border: solid var(--text-color);
  border-width: 0 var(--thickness) var(--thickness) 0;
  display: inline-block;
  transform: translateY(-20%) rotate(45deg);
  margin-right: 0.2em;
}
.DropdownPopoverButton {
  background-color: var(--settings-control-activated-background);
  font-size: var(--settings-font-size);
  padding: var(--settings-control-button-min-padding-v)
    var(--settings-control-button-min-padding-h);
  box-sizing: border-box;
  text-align: left;
  text-transform: uppercase;
  text-overflow: ellipsis;
  overflow-x: hidden;
  width: 100%;
  min-height: var(--settings-control-default-height);
  display: flex;
  justify-content: center;
  flex-direction: column;
  cursor: pointer;
  color: var(--text-color);
  transition:
    background-color var(--settings-control-hover-fade-duration),
    box-shadow var(--settings-control-hover-fade-duration);
}
.DropdownPopoverButton:hover {
  background-color: var(--settings-control-hover-background);
}
.DropdownPopoverButton:active {
  background-color: var(--settings-control-active-background);
}
.DropdownPopoverButton.Selected {
  filter: brightness(115%);
}
.DebuggerMain .ButtonControl {
  border-radius: var(--settings-control-inner-border-radius);
  background-color: var(--settings-control-activated-background);
  margin: var(--settings-control-margin) 0;
  font-weight: var(--settings-font-weight);
  font-size: var(--settings-font-size);
  padding: var(--settings-control-button-min-padding-v)
    var(--settings-control-button-min-padding-h);
  box-sizing: border-box;
  text-transform: uppercase;
  text-overflow: ellipsis;
  overflow: hidden;
  width: 100%;
  min-height: var(--settings-control-default-height);
  display: flex;
  justify-content: center;
  flex-direction: row;
  text-align: center;
  transition:
    background-color var(--settings-control-hover-fade-duration),
    box-shadow var(--settings-control-hover-fade-duration);
}
.ButtonControl + .ButtonControl {
  margin-left: var(--settings-control-margin);
}
.ButtonControl:not(.Disabled):hover {
  background-color: var(--settings-control-hover-background);
  box-shadow: var(--settings-control-box-hover-shadow);
}
.ButtonControl:not(.Disabled):active {
  background-color: var(--settings-control-active-background);
  box-shadow: var(--settings-control-box-active-shadow);
}
.ActiveActionSetContainer {
  display: grid;
  grid-template-columns: repeat(6, max-content);
  max-width: 90rem;
  margin-left: 2rem;
  column-gap: 10px;
}
.ActiveActionSetsHeader {
  display: contents;
}
.ActiveActionSetsHeader .Label {
  font-size: 1.25rem;
  border-bottom: 1px solid #fff;
  margin-bottom: 3px;
}
.ActiveActionSet {
  display: contents;
}
.ActionSetName {
  grid-column: 1;
}
.ActionSetPath {
  grid-column: 2;
  font-style: italic;
}
.ActionSetPriority {
  grid-column: 3;
}
.ActionSetDevice {
  grid-column: 4;
  font-style: italic;
}
.ActionSetSecondaryName {
  grid-column: 5;
}
.ActionSetSecondaryPath {
  grid-column: 6;
  font-style: italic;
}
.InputDebuggerSectionHeading {
  font-size: 2rem;
}
.InputDebuggerHeading {
  font-size: 1.5rem;
}
.DebuggerMain {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}
.DebuggerMain .DebuggerState {
  display: flex;
  flex-direction: column;
}
.DebuggerMain .Error {
  background: darkred;
  border: solid 1px red;
}
.DebuggerMain .ActionContainer {
  display: flex;
  flex-direction: row;
}
.DebuggerMain .ActionSetButtons {
  display: flex;
  flex-direction: column;
  width: 20%;
}
.DebuggerMain .ActionSetButtons .Selected {
  background: #789;
}
.ActionHeader.Label {
  grid-column: 1 / 2;
}
.DebuggerMain .ActionEntry {
  margin-left: 10px;
}
.DebuggerMain .ActionListWrapper {
  overflow-y: auto;
  flex-grow: 1;
}
.DebuggerMain .ActionList {
  margin-left: 10px;
  display: grid;
  grid-auto-columns: max-content;
  grid-auto-rows: min-content;
  gap: 5px;
}
.DebuggerMain .Action {
  display: contents;
}
.DebuggerMain .Action .Entries {
  margin-left: 10px;
  display: flex;
  flex-direction: row;
}
.ActionName.Label {
  font-size: 1.25rem;
  grid-column-start: 1;
}
.ActionPath {
  font-style: italic;
  font-size: 1rem;
  display: contents;
}
.ActionEntry.BooleanValue {
  width: 10rem;
  height: 1.1rem;
  font-size: 0.8rem;
  text-align: center;
  border: #55555580 2px solid;
}
.ActionEntry.BooleanValue:not(.IsTrue) {
  border: #55555580 2px solid;
  transition: all 500ms;
}
.ActionEntry.BooleanValue.IsTrue {
  background: var(--selectedtext);
  color: #9c8d8d;
}
.Action .Unbound {
  grid-column: 1 / 6;
  margin-left: 10px;
}
.DebuggerMain .FilterLink:link {
  color: #add8e6;
}
.DebuggerMain .FilterLink:visited {
  color: blue;
}
.FilterDetails {
  display: flex;
  flex-direction: column;
}
.FilterDetails .ParameterList,
.FilterDetails .InputList,
.FilterDetails .OutputList {
  display: flex;
  flex-direction: column;
  margin-left: 20px;
}
.FilterDetails .InputDebuggerHeading {
  margin-top: 5px;
}
.FilterDetails .FilterIO {
  display: flex;
  flex-direction: row;
}
.FilterIO .Label {
  margin-right: 5px;
}
.FilterIO .Suppressed {
  border: 1px solid darkred;
  color: coral;
  font-size: 0.8rem;
  text-transform: uppercase;
}
.SteamUnavailable .SteamRequired {
  opacity: 0.5;
  pointer-events: none;
}
.SourceModeHelp {
  float: right;
  margin: 5px;
  text-align: center;
  vertical-align: middle;
  font-size: 1.5rem;
  height: 2.2rem;
  width: 2.2rem;
  border-radius: 50%;
  border: 1px;
  background-color: #586170;
}
.SimulatedControllerInfoSection {
  color: #fff;
  font-size: 1rem;
  align-items: center;
}
.SimulatedControllerInfoHelp {
  float: right;
  margin: 10px;
  text-align: center;
  font-size: 1.5rem;
  height: 2.2rem;
  width: 2.2rem;
  border-radius: 50%;
  border: 1px;
  background-color: var(--buttondefault);
}
.tippy-tooltip.ControllerBindingToolTip-theme {
  font-size: 1rem;
  background-color: #24272d;
  box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.3);
}
.tippy-tooltip.ControllerBindingToolTip-theme[data-placement^="top"]
  .tippy-arrow {
  border-top-color: #24272d;
}
.tippy-tooltip.ControllerBindingToolTip-theme[data-placement^="bottom"]
  .tippy-arrow {
  border-bottom-color: #24272d;
}
.tippy-tooltip.ControllerBindingToolTip-theme[data-placement^="left"]
  .tippy-arrow {
  border-left-color: #24272d;
}
.tippy-tooltip.ControllerBindingToolTip-theme[data-placement^="right"]
  .tippy-arrow {
  border-right-color: #24272d;
}
.BindingListSectionHeader {
  font-size: 1.4em;
  color: var(--descriptiontext);
  padding-bottom: 0.2rem;
}
.BindingUITopSection {
  padding-top: var(--pagecontenttoppadding);
  margin-bottom: 1rem;
  min-height: 9.5rem;
}
.BindingUILoadingSection {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.BindingUILoadingHeader {
  color: #d3d3d3;
  font-size: 1.5em;
}
.ActionTabContainer {
  padding-top: var(--pagecontenttoppadding);
}
.BindingName {
  font-size: 1.4em;
  color: #d3d3d3;
  word-wrap: break-word;
  max-width: 40rem;
}
.BindingDescription {
  font-size: 1em;
  color: #d3d3d3;
  padding-top: 0.5rem;
  margin-right: 5rem;
  min-height: 2.5rem;
}
.VROverlay .BindingDescription {
  margin-right: 7rem;
}
.CurrentSection {
  margin: 0 2rem;
}
.CurrentSection .BindingDescription {
  min-height: 1rem;
  padding-top: 0;
}
.CurrentSection,
.ControllerTypeWrapper {
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
}
.BindingLastUpdated {
  margin-top: auto;
  font-size: 0.8em;
  color: #d3d3d3;
}
.BindingEntry {
  position: relative;
  background: var(--bindinglistdetailsbackground);
  padding: 0.5rem;
  margin: 0.5rem;
  width: 40vw;
}
.ControllerTypeWrapper .BindingEntry {
  background: var(--controllertypebackground);
  width: 20vw;
  flex: 1;
}
.BindingEntry .AppImage {
  height: 92px;
  margin-right: 1rem;
}
.BindingListSection {
  margin: 0 1rem;
  padding: 0.5rem;
}
.BindingDetails {
  margin-right: auto;
  width: 100%;
}
.BindingEntryActionButtons {
  position: absolute;
  bottom: 0;
  width: calc(100% - 0.7rem);
}
.BindingListEntryButton {
  align-self: flex-end;
  margin: 0.2rem 0;
  margin-left: auto;
}
.DeleteButton {
  height: 1.7rem;
}
.SteamCommunityProfileImage {
  height: 92px;
  width: 92px;
  object-fit: contain;
  margin-right: 1rem;
}
.BindingSteamPersonaName {
  font-size: 0.8em;
  font-weight: lighter;
  font-style: italic;
}
.ControllerTypeButton {
  margin: 0.5rem;
  margin-left: auto;
  align-items: center;
}
.ControllerTypeButton img {
  margin: 0;
  margin-right: auto;
  background: var(--controllertypebackground);
  z-index: 0;
  height: 92px;
  width: 92px;
}
.AppBindingSection {
  position: relative;
  overflow-y: auto;
  padding: 0 1rem;
  max-height: calc(100% - 20rem);
}
.ConvertWarning {
  color: var(--descriptiontext);
}
.BindingSelectButton {
  float: right;
  margin: 0.1rem;
}
.ButtonControl + .ButtonControl {
  margin-left: initial;
}
.InformationButtonImage {
  width: 1rem;
  height: 1rem;
  margin-right: 0.5rem;
}
.RemappedInfo {
  float: left;
  margin-right: auto;
  width: 100%;
}
.RemappedInfoSpan {
  font-size: 0.8rem;
  color: #d3d3d3;
  display: flex;
  flex-direction: row;
  justify-content: left;
  align-items: center;
}
.RemappedInfoHr {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  border-top: 1px solid #6d7a81;
}
.rodal,
.rodal-mask {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 100;
}
.rodal {
  position: fixed;
}
.rodal-mask {
  position: absolute;
  background: rgba(0, 0, 0, 0.3);
}
.rodal-dialog {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  z-index: 101;
  padding: 15px;
  background: #fff;
  border-radius: 3px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
}
.rodal-dialog:focus {
  outline: none;
}
.rodal-close {
  position: absolute;
  cursor: pointer;
  top: 16px;
  right: 16px;
  width: 16px;
  height: 16px;
}
.rodal-close:before,
.rodal-close:after {
  position: absolute;
  content: "";
  height: 2px;
  width: 100%;
  top: 50%;
  left: 0;
  margin-top: -1px;
  background: #999;
  border-radius: 100%;
  -webkit-transition: background 0.2s;
  transition: background 0.2s;
}
.rodal-close:before {
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
}
.rodal-close:after {
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg);
}
.rodal-close:hover:before,
.rodal-close:hover:after {
  background: #333;
}
@-webkit-keyframes rodal-fade-enter {
  from {
    opacity: 0;
  }
}
@keyframes rodal-fade-enter {
  from {
    opacity: 0;
  }
}
.rodal-fade-enter {
  -webkit-animation: rodal-fade-enter both ease-in;
  animation: rodal-fade-enter both ease-in;
}
@-webkit-keyframes rodal-fade-leave {
  to {
    opacity: 0;
  }
}
@keyframes rodal-fade-leave {
  to {
    opacity: 0;
  }
}
.rodal-fade-leave {
  -webkit-animation: rodal-fade-leave both ease-out;
  animation: rodal-fade-leave both ease-out;
}
@-webkit-keyframes rodal-zoom-enter {
  from {
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }
}
@keyframes rodal-zoom-enter {
  from {
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }
}
.rodal-zoom-enter {
  -webkit-animation: rodal-zoom-enter both cubic-bezier(0.4, 0, 0, 1.5);
  animation: rodal-zoom-enter both cubic-bezier(0.4, 0, 0, 1.5);
}
@-webkit-keyframes rodal-zoom-leave {
  to {
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }
}
@keyframes rodal-zoom-leave {
  to {
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }
}
.rodal-zoom-leave {
  -webkit-animation: rodal-zoom-leave both;
  animation: rodal-zoom-leave both;
}
@-webkit-keyframes rodal-slideDown-enter {
  from {
    -webkit-transform: translate3d(0, -100px, 0);
    transform: translate3d(0, -100px, 0);
  }
}
@keyframes rodal-slideDown-enter {
  from {
    -webkit-transform: translate3d(0, -100px, 0);
    transform: translate3d(0, -100px, 0);
  }
}
.rodal-slideDown-enter {
  -webkit-animation: rodal-slideDown-enter both cubic-bezier(0.4, 0, 0, 1.5);
  animation: rodal-slideDown-enter both cubic-bezier(0.4, 0, 0, 1.5);
}
@-webkit-keyframes rodal-slideDown-leave {
  to {
    -webkit-transform: translate3d(0, -100px, 0);
    transform: translate3d(0, -100px, 0);
  }
}
@keyframes rodal-slideDown-leave {
  to {
    -webkit-transform: translate3d(0, -100px, 0);
    transform: translate3d(0, -100px, 0);
  }
}
.rodal-slideDown-leave {
  -webkit-animation: rodal-slideDown-leave both;
  animation: rodal-slideDown-leave both;
}
@-webkit-keyframes rodal-slideLeft-enter {
  from {
    -webkit-transform: translate3d(-150px, 0, 0);
    transform: translate3d(-150px, 0, 0);
  }
}
@keyframes rodal-slideLeft-enter {
  from {
    -webkit-transform: translate3d(-150px, 0, 0);
    transform: translate3d(-150px, 0, 0);
  }
}
.rodal-slideLeft-enter {
  -webkit-animation: rodal-slideLeft-enter both cubic-bezier(0.4, 0, 0, 1.5);
  animation: rodal-slideLeft-enter both cubic-bezier(0.4, 0, 0, 1.5);
}
@-webkit-keyframes rodal-slideLeft-leave {
  to {
    -webkit-transform: translate3d(-150px, 0, 0);
    transform: translate3d(-150px, 0, 0);
  }
}
@keyframes rodal-slideLeft-leave {
  to {
    -webkit-transform: translate3d(-150px, 0, 0);
    transform: translate3d(-150px, 0, 0);
  }
}
.rodal-slideLeft-leave {
  -webkit-animation: rodal-slideLeft-leave both;
  animation: rodal-slideLeft-leave both;
}
@-webkit-keyframes rodal-slideRight-enter {
  from {
    -webkit-transform: translate3d(150px, 0, 0);
    transform: translate3d(150px, 0, 0);
  }
}
@keyframes rodal-slideRight-enter {
  from {
    -webkit-transform: translate3d(150px, 0, 0);
    transform: translate3d(150px, 0, 0);
  }
}
.rodal-slideRight-enter {
  -webkit-animation: rodal-slideRight-enter both cubic-bezier(0.4, 0, 0, 1.5);
  animation: rodal-slideRight-enter both cubic-bezier(0.4, 0, 0, 1.5);
}
@-webkit-keyframes rodal-slideRight-leave {
  to {
    -webkit-transform: translate3d(150px, 0, 0);
    transform: translate3d(150px, 0, 0);
  }
}
@keyframes rodal-slideRight-leave {
  to {
    -webkit-transform: translate3d(150px, 0, 0);
    transform: translate3d(150px, 0, 0);
  }
}
.rodal-slideRight-leave {
  -webkit-animation: rodal-slideRight-leave both;
  animation: rodal-slideRight-leave both;
}
@-webkit-keyframes rodal-slideUp-enter {
  from {
    -webkit-transform: translate3d(0, 100px, 0);
    transform: translate3d(0, 100px, 0);
  }
}
@keyframes rodal-slideUp-enter {
  from {
    -webkit-transform: translate3d(0, 100px, 0);
    transform: translate3d(0, 100px, 0);
  }
}
.rodal-slideUp-enter {
  -webkit-animation: rodal-slideUp-enter both cubic-bezier(0.4, 0, 0, 1.5);
  animation: rodal-slideUp-enter both cubic-bezier(0.4, 0, 0, 1.5);
}
@-webkit-keyframes rodal-slideUp-leave {
  to {
    -webkit-transform: translate3d(0, 100px, 0);
    transform: translate3d(0, 100px, 0);
  }
}
@keyframes rodal-slideUp-leave {
  to {
    -webkit-transform: translate3d(0, 100px, 0);
    transform: translate3d(0, 100px, 0);
  }
}
.rodal-slideUp-leave {
  -webkit-animation: rodal-slideUp-leave both;
  animation: rodal-slideUp-leave both;
}
@-webkit-keyframes rodal-flip-enter {
  from {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 60deg);
    transform: perspective(400px) rotate3d(1, 0, 0, 60deg);
  }
  70% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -15deg);
    transform: perspective(400px) rotate3d(1, 0, 0, -15deg);
  }
  to {
    -webkit-transform: perspective(400px);
    transform: perspective(400px);
  }
}
@keyframes rodal-flip-enter {
  from {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 60deg);
    transform: perspective(400px) rotate3d(1, 0, 0, 60deg);
  }
  70% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -15deg);
    transform: perspective(400px) rotate3d(1, 0, 0, -15deg);
  }
  to {
    -webkit-transform: perspective(400px);
    transform: perspective(400px);
  }
}
.rodal-flip-enter {
  -webkit-animation: rodal-flip-enter both ease-in;
  animation: rodal-flip-enter both ease-in;
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
}
@-webkit-keyframes rodal-flip-leave {
  from {
    -webkit-transform: perspective(400px);
    transform: perspective(400px);
  }
  30% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -15deg);
    transform: perspective(400px) rotate3d(1, 0, 0, -15deg);
  }
  to {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 45deg);
    transform: perspective(400px) rotate3d(1, 0, 0, 45deg);
  }
}
@keyframes rodal-flip-leave {
  from {
    -webkit-transform: perspective(400px);
    transform: perspective(400px);
  }
  30% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -15deg);
    transform: perspective(400px) rotate3d(1, 0, 0, -15deg);
  }
  to {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 45deg);
    transform: perspective(400px) rotate3d(1, 0, 0, 45deg);
  }
}
.rodal-flip-leave {
  -webkit-animation: rodal-flip-leave both;
  animation: rodal-flip-leave both;
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
}
@-webkit-keyframes rodal-rotate-enter {
  from {
    -webkit-transform: rotate3d(0, 0, 1, -180deg) scale3d(0.3, 0.3, 0.3);
    transform: rotate3d(0, 0, 1, -180deg) scale3d(0.3, 0.3, 0.3);
  }
}
@keyframes rodal-rotate-enter {
  from {
    -webkit-transform: rotate3d(0, 0, 1, -180deg) scale3d(0.3, 0.3, 0.3);
    transform: rotate3d(0, 0, 1, -180deg) scale3d(0.3, 0.3, 0.3);
  }
}
.rodal-rotate-enter {
  -webkit-animation: rodal-rotate-enter both;
  animation: rodal-rotate-enter both;
  -webkit-transform-origin: center;
  transform-origin: center;
}
@-webkit-keyframes rodal-rotate-leave {
  to {
    -webkit-transform: rotate3d(0, 0, 1, 180deg) scale3d(0.3, 0.3, 0.3);
    transform: rotate3d(0, 0, 1, 180deg) scale3d(0.3, 0.3, 0.3);
  }
}
@keyframes rodal-rotate-leave {
  to {
    -webkit-transform: rotate3d(0, 0, 1, 180deg) scale3d(0.3, 0.3, 0.3);
    transform: rotate3d(0, 0, 1, 180deg) scale3d(0.3, 0.3, 0.3);
  }
}
.rodal-rotate-leave {
  -webkit-animation: rodal-rotate-leave both;
  animation: rodal-rotate-leave both;
  -webkit-transform-origin: center;
  transform-origin: center;
}
@-webkit-keyframes rodal-door-enter {
  from {
    -webkit-transform: scale3d(0, 1, 1);
    transform: scale3d(0, 1, 1);
  }
}
@keyframes rodal-door-enter {
  from {
    -webkit-transform: scale3d(0, 1, 1);
    transform: scale3d(0, 1, 1);
  }
}
.rodal-door-enter {
  -webkit-animation: rodal-door-enter both cubic-bezier(0.4, 0, 0, 1.5);
  animation: rodal-door-enter both cubic-bezier(0.4, 0, 0, 1.5);
}
@-webkit-keyframes rodal-door-leave {
  60% {
    -webkit-transform: scale3d(0.01, 1, 1);
    transform: scale3d(0.01, 1, 1);
  }
  to {
    -webkit-transform: scale3d(0, 1, 0.1);
    transform: scale3d(0, 1, 0.1);
  }
}
@keyframes rodal-door-leave {
  60% {
    -webkit-transform: scale3d(0.01, 1, 1);
    transform: scale3d(0.01, 1, 1);
  }
  to {
    -webkit-transform: scale3d(0, 1, 0.1);
    transform: scale3d(0, 1, 0.1);
  }
}
.rodal-door-leave {
  -webkit-animation: rodal-door-leave both;
  animation: rodal-door-leave both;
}
@keyframes svg_library_AnimationFadeOutIn_1lEwX {
  0% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  95% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.svg_library_recordingCircle_2ovZQ {
  animation: svg_library_AnimationFadeOutIn_1lEwX 5s infinite linear;
}
/*# sourceMappingURL=file:///c:/buildslave/steamvr_rel_npm_vrwebui/build/public/runtime/resources/webinterface/dashboard/sourcemaps/css/controllerbindingui.css.map*/
